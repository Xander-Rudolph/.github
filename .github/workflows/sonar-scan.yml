name: Sonar Scan

on:
  workflow_call:
    inputs:
      scanPath:
        description: 'path to scan'
        required: false
        type: string
        default: .
        
jobs:
  sonar:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/status | grep -q 'UP'"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5

    steps:
      - name: Set up JDK # SonarQube scanner requires Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Configure SonarQube Project
        id: sonar-config
        shell: pwsh
        run: |
          $PROJECT_KEY=${{ github.repository }}
          curl -u admin:admin -X POST "http://localhost:9000/api/projects/create?name=$PROJECT_KEY&project=$PROJECT_KEY"

          $TOKEN=(curl -u admin:admin -X POST -d "name=$($PROJECT_KEY)_token" "http://localhost:9000/api/user_tokens/generate" | ConvertFrom-json).token
          echo "SONAR_TOKEN=$TOKEN" >> $env:GITHUB_OUTPUT
  
      - name: Run SonarQube - terraform
        env:
          SONAR_TOKEN: ${{ steps.sonar-config.outputs.SONAR_TOKEN }}
          COVERAGE_ENABLED: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for PR decoration
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository }}
            -Dsonar.sources=.
            -Dsonar.host.url=http://localhost:9000
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.language=terraform
