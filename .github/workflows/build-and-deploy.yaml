name: Run Ghost, generate static content, and publish to github pages

on:
  workflow_call:
    inputs:
      github-user:
        description: "github user name"
        required: false # once I nail down repo create this can use the actor and be set to false
        type: string
      github-repo:
        description: "Name of github repo"
        required: false # once I nail down repo create this can use the actor and be set to false
        type: string
      dockerimage:
        description: "ghost docker image used to generate content"
        default: 'ghost:alpine'
        required: false
        type: string        
      content-path:
        description: "Path of the content folder (will add prefix github.workspace automatically)"
        default: ""
        required: false
        type: string        
    secrets:
      OVERRIDE_TOKEN:
        required: false

env:
  github-user: ${{ inputs.github-user || github.actor }}
  github-repo: ${{ inputs.github-repo || format('{0}.github.io', inputs.github-user || github.repository_owner) }}
  # github-repo: ${{ inputs.github-user || github.repository_owner }}.github.io
  GITHUB_OVERRIDE_TOKEN: ${{ secrets.OVERRIDE_TOKEN }}

jobs:
  repo:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Repo üî®
        uses: moutansos/create-repository-action@main
        with:
          name: ${{ env.github-repo }}
          org: ${{ inputs.github-user || github.repository_owner }}
          access-token: ${{ env.GITHUB_OVERRIDE_TOKEN }}
          private-repo: false
          initialize-repo: true

  ghost:
    concurrency: ci-${{ github.ref }}
    needs: repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      
      - name: Run Ghost üëª
        run: |
          docker run -d -p 2368:2368 -e NODE_ENV=development -e database__connection__filename='/var/lib/ghost/content/data/ghost.db' -v "${{ github.workspace }}/${{ inputs.content-path }}/content":/var/lib/ghost/content ${{ inputs.dockerimage }}
          sleep 10
         
      - name: Install ghost-static-site-generator ‚ú®
        run: npm install -g ghost-static-site-generator
  
      - name: Generate Static Site üõ†Ô∏è
        run: |
          if [ -f "${{ github.workspace }}/${{ inputs.content-path }}/CNAME" ]; then
            cname_url=$(cat ${{ github.workspace }}/${{ inputs.content-path }}/CNAME)
            echo "CNAME file found. Using URL: $cname_url"
            gssg --url "https://$cname_url"
          else
            echo "CNAME file not found. Using default URL."
            gssg --url "https://${{ env.github-repo }}"
          fi

      - name: Deploy to Github Pages üöÄ
        if: ${{ env.GITHUB_OVERRIDE_TOKEN != '' }}
        uses: JamesIves/github-pages-deploy-action@v4.6.4
        with:
          branch: main #gh-pages
          folder: static
          token: ${{ env.GITHUB_OVERRIDE_TOKEN }}
          repository-name: ${{ env.github-user }}/${{ env.github-repo }}
